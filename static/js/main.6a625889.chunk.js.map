{"version":3,"sources":["Components/Pagination.js","JobSearch.js","Components/Toggle.js","Components/useDarkMode.js","Components/globalStyles.js","App.js","reportWebVitals.js","index.js"],"names":["Pagination","showPerPage","onPaginationChange","total","useState","counter","setCounter","useEffect","value","onButtonClick","type","Math","ceil","className","onClick","JobSearch","user","updateUser","searchTerm","setSearchTerm","fetch","then","response","json","result","start","end","pagination","setPagination","placeholder","onChange","event","target","length","filter","xtype","title","toLowerCase","includes","slice","map","index","created_at","location","how_to_apply","Button","color","id","style","marginBottom","UncontrolledCollapse","toggler","CardBody","description","Toggle","theme","toggleTheme","console","log","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","cx","cy","r","x1","y1","x2","y2","useDarkMode","setTheme","GlobalStyles","createGlobalStyle","body","lightTheme","text","darkTheme","Container","styled","div","App","themeMode","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6a625889.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react'\r\n\r\nconst Pagination = ({showPerPage,  onPaginationChange, total}) =>{\r\n    const [counter, setCounter]=useState(1);\r\n\r\n    useEffect(()=>{\r\n        const value = showPerPage * counter;\r\n        onPaginationChange(value - showPerPage, value);\r\n    }, [counter]);\r\n\r\n    const onButtonClick=(type)=>{\r\n      if(type === \"prev\"){\r\n        if(counter === 1){\r\n            setCounter(1)\r\n        } else{\r\n            setCounter(counter - 1);\r\n        }\r\n      }else if(type === \"next\"){\r\n\r\n       if(Math.ceil(total/showPerPage)=== counter ){\r\n           setCounter(counter)\r\n\r\n       }else {\r\n           setCounter(counter +1);\r\n       }\r\n\r\n      }\r\n    }\r\n  //  console.log(showPerPage);\r\n    return (\r\n        <div className=\"d-flex justify-content-between\">\r\n           <button className=\"btn btn-primary btn-sm\"  onClick={()=> onButtonClick(\"prev\")}>Previous</button>\r\n           <br/>\r\n           <button className=\"btn btn-primary btn-sm\" onClick={()=> onButtonClick(\"next\")}>Next</button>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pagination;\r\n","import React, {useState, useEffect} from 'react';\r\nimport Pagination from './Components/Pagination'\r\nimport { UncontrolledCollapse, Button, CardBody, } from 'reactstrap';\r\n\r\n\r\n\r\nconst JobSearch =()=>{\r\n\r\n    const [user, updateUser]=useState([]);\r\n    const [searchTerm, setSearchTerm]=useState(\"\")\r\n\r\n    const getJob=()=>{\r\n      fetch(\"https://jobs.github.com/positions.json?markdown=true\")\r\n      .then(response=>response.json())\r\n      .then(result=>updateUser(result))\r\n    }\r\n\r\n    useEffect(()=>{\r\n      getJob();\r\n    },[])\r\n\r\n    const [showPerPage, setShowPerPage]=useState(20);\r\n    const [pagination, setPagination]=useState({\r\n      start: 0, \r\n      end: showPerPage,\r\n    });\r\n\r\n    const onPaginationChange=(start, end)=>{\r\n     setPagination({start: start, end: end})\r\n    }\r\n\r\n    return(\r\n      <div className=\"container\">\r\n     <div className=\"row\">\r\n       <div className=\"col-md-6 mt-3\">\r\n         <h3 className=\"text-primary\">Github Job Search </h3>\r\n       </div>\r\n       <div className=\"col-md-6\">\r\n      \r\n       </div>\r\n     </div>\r\n     <div className=\"row\">\r\n       <div className=\"col-md-4 mt-2\">\r\n       <input type=\"text\" className=\"form-control\" placeholder=\"Search Jobs\" onChange={event => {setSearchTerm(event.target.value)}} />\r\n       </div>\r\n       <div className=\"col-md-4\">\r\n       \r\n       </div>\r\n       <div className=\"col-md-4 mt-2\">\r\n       <Pagination showPerPage={showPerPage}  onPaginationChange={ onPaginationChange} total={user.length}/>\r\n     \r\n       </div>\r\n     \r\n     </div>\r\n     <div className=\"row mt-3\">\r\n         {\r\n             user.filter((xtype)=>{\r\n               if(searchTerm ==\"\"){\r\n                 return xtype\r\n               } else if (xtype.title.toLowerCase().includes(searchTerm.toLowerCase())){\r\n                 return xtype\r\n               }\r\n             }).slice(pagination.start, pagination.end).map((xtype, index)=>{\r\n                 return(\r\n                 \r\n                  \r\n                  <div className=\"container\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-12\" >\r\n                        <div className=\"card mt-3 p-3\">\r\n                        \r\n                            <div className=\"card-body\"  key={index}>\r\n                              {xtype.title}<br/>\r\n                              \r\n                              <br/>\r\n                              <small className=\"btn btn-info btn-sm text-white\">{xtype.created_at}</small> || <b/>\r\n                              <small className=\" btn btn-success btn-sm text-white\">{xtype.type}</small>\r\n                              <br/> <br/>\r\n                              <small className=\"btn btn-info btn-sm\">Location : {xtype.location}</small>\r\n                              <br/><br/>\r\n                              <small className=\"text-danger\"> How to Apply : {xtype.how_to_apply}</small>\r\n                              <br/><br/>\r\n\r\n                              \r\n                              <Button color=\"primary\" id=\"toggler\" style={{ marginBottom: '1rem' }}>\r\n                                Details\r\n                              </Button>\r\n                              <UncontrolledCollapse toggler=\"#toggler\">\r\n                                  <CardBody>\r\n                                    {xtype.description}\r\n                                  </CardBody>\r\n                              </UncontrolledCollapse>\r\n                                    <br/>\r\n                             \r\n                            </div>\r\n                             \r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div>\r\n                      \r\n                    </div>\r\n                  </div>\r\n               \r\n                      \r\n                 )\r\n             })\r\n         }\r\n     </div>\r\n\r\n\r\n    </div>\r\n    \r\n      )\r\n}\r\nexport default JobSearch;","import React from 'react'\r\n\r\nexport const Toggle = ({theme, toggleTheme}) => {\r\n    console.log(theme);\r\n    return (\r\n        <div onClick={toggleTheme}>\r\n            {theme === 'light' ? <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#212121\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"feather feather-moon\"><path d=\"M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z\"></path></svg> \r\n            :\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#fff\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"feather feather-sun\"><circle cx=\"12\" cy=\"12\" r=\"5\"></circle><line x1=\"12\" y1=\"1\" x2=\"12\" y2=\"3\"></line><line x1=\"12\" y1=\"21\" x2=\"12\" y2=\"23\"></line><line x1=\"4.22\" y1=\"4.22\" x2=\"5.64\" y2=\"5.64\"></line><line x1=\"18.36\" y1=\"18.36\" x2=\"19.78\" y2=\"19.78\"></line><line x1=\"1\" y1=\"12\" x2=\"3\" y2=\"12\"></line><line x1=\"21\" y1=\"12\" x2=\"23\" y2=\"12\"></line><line x1=\"4.22\" y1=\"19.78\" x2=\"5.64\" y2=\"18.36\"></line><line x1=\"18.36\" y1=\"5.64\" x2=\"19.78\" y2=\"4.22\"></line></svg> \r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import  {useState} from 'react'\r\n\r\nexport const useDarkMode=()=> {\r\n\r\n    const [theme, setTheme]= useState('light')\r\n    const toggleTheme=()=>{\r\n        theme === 'dark' ? setTheme('light') : setTheme('dark');\r\n    }\r\n    return [ theme, toggleTheme];\r\n}\r\n\r\nexport default useDarkMode\r\n","import {createGlobalStyle} from 'styled-components';\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n\r\nbody{\r\n    background:${({theme})=> theme.body};\r\n   \r\n}\r\n`;\r\n\r\nexport const lightTheme = {\r\n    body: '#fff',\r\n    text: '#121212'\r\n};\r\nexport const darkTheme = {\r\n    body: '#121212',\r\n    text: '#fff'\r\n};\r\n","import React, {useState} from 'react';\nimport JobSearch from './JobSearch';\nimport styled, {ThemeProvider} from 'styled-components'\nimport {Toggle} from './Components/Toggle';\nimport {useDarkMode} from './Components/useDarkMode';\nimport {GlobalStyles, lightTheme, darkTheme} from './Components/globalStyles';\nconst Container = styled.div`\n \n`\n\n\nfunction App() {\nconst [theme, toggleTheme]= useDarkMode();\n const themeMode = theme === 'light' ? lightTheme : darkTheme;\n \n  return (   \n    <ThemeProvider theme={themeMode}>\n      <Container>\n      <GlobalStyles/>\n      <Toggle theme={theme} toggleTheme={toggleTheme}/>\n      <JobSearch/>\n    </Container>\n    </ThemeProvider>\n    \n   \n  \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}